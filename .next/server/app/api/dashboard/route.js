/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/dashboard/route";
exports.ids = ["app/api/dashboard/route"];
exports.modules = {

/***/ "(rsc)/./app/api/dashboard/route.ts":
/*!************************************!*\
  !*** ./app/api/dashboard/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\n// Function to convert BigInt values to strings in an object\nfunction convertBigInts(obj) {\n    if (obj === null || obj === undefined) {\n        return obj;\n    }\n    if (typeof obj === 'bigint') {\n        return Number(obj);\n    }\n    // Handle Date objects\n    if (obj instanceof Date) {\n        return obj.toISOString();\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(convertBigInts);\n    }\n    if (typeof obj === 'object') {\n        const result = {};\n        for(const key in obj){\n            if (obj.hasOwnProperty(key)) {\n                result[key] = convertBigInts(obj[key]);\n            }\n        }\n        return result;\n    }\n    return obj;\n}\nasync function GET(request) {\n    try {\n        // Authentication temporarily disabled for testing\n        // const session = await getServerSession(authOptions);\n        // if (!session) {\n        //   return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n        // }\n        // Get current date for time-based queries\n        const today = new Date();\n        today.setHours(0, 0, 0, 0); // Set to start of day for accurate comparison\n        const tomorrow = new Date(today);\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n        // Get dashboard data based on actual schema\n        const [totalProducts, totalCustomers, totalOrders, totalSuppliers, pendingOrders, recentOrdersRaw, lowStockItems, // New dashboard data points\n        imeiStock, totalInToday, totalOutToday, devicesAwaitingQC, recentGoodsInRaw, // New queries for updated dashboard\n        recentOperationsRaw, availableStockCount, pendingQCCount, oldStockCount] = await Promise.all([\n            // Total IMEI products - optimized with potential index usage\n            prisma.tbl_imei.count(),\n            // Total customers\n            prisma.tbl_customers.count(),\n            // Total orders (distinct order_id)\n            prisma.tbl_orders.count(),\n            // Total suppliers\n            prisma.tbl_suppliers.count(),\n            // Pending orders (no specific delivered field, use date as proxy)\n            prisma.tbl_orders.count({\n                where: {\n                    date: {\n                        gte: lastMonth\n                    }\n                }\n            }),\n            // Recent orders with customer data (optimized with JOIN)\n            prisma.$queryRaw`\n        SELECT\n          o.id,\n          o.order_id,\n          o.customer_id,\n          o.item_imei,\n          o.date,\n          o.po_box,\n          o.tracking_no,\n          c.name as customer_name\n        FROM tbl_orders o\n        LEFT JOIN tbl_customers c ON o.customer_id = c.customer_id\n        ORDER BY o.date DESC\n        LIMIT 5\n      `,\n            // Low stock items (items with specific status)\n            prisma.tbl_imei.findMany({\n                take: 10,\n                where: {\n                    status: {\n                        in: [\n                            1,\n                            2\n                        ]\n                    }\n                }\n            }),\n            // IMEI Stock: Total no of devices in stock (status = 1 in tbl_imei)\n            prisma.tbl_imei.count({\n                where: {\n                    status: 1\n                }\n            }),\n            // Total In: no of units booked in today\n            // (from tbl_purchases where date = today)\n            prisma.tbl_purchases.count({\n                where: {\n                    date: {\n                        gte: today,\n                        lt: tomorrow\n                    }\n                }\n            }),\n            // Total Out: no of units booked out today\n            // (from tbl_imei_sales_orders where date = today and is_completed = 1)\n            prisma.tbl_imei_sales_orders.count({\n                where: {\n                    date: {\n                        gte: today,\n                        lt: tomorrow\n                    },\n                    is_completed: 1\n                }\n            }),\n            // Devices awaiting QC: count of all devices in tbl_purchases\n            // with qc_required = 1 and qc_completed = 0\n            prisma.tbl_purchases.count({\n                where: {\n                    qc_required: 1,\n                    qc_completed: 0\n                }\n            }),\n            // Recent Goods In table: most recent purchases with supplier information\n            // Optimized to avoid expensive JOINs and GROUP BY\n            (async ()=>{\n                // Step 1: Fetch recent purchases (distinct by purchase_id)\n                const recentPurchases = await prisma.$queryRaw`\n          SELECT DISTINCT\n            purchase_id,\n            date,\n            supplier_id,\n            qc_required,\n            qc_completed\n          FROM tbl_purchases\n          ORDER BY date DESC\n          LIMIT 10\n        `;\n                // Step 2: Fetch supplier information for these purchases\n                const supplierIds = recentPurchases.map((p)=>p.supplier_id);\n                const suppliers = await prisma.tbl_suppliers.findMany({\n                    where: {\n                        supplier_id: {\n                            in: supplierIds\n                        }\n                    }\n                });\n                // Create a supplier map for quick lookup\n                const supplierMap = {};\n                suppliers.forEach((supplier)=>{\n                    supplierMap[supplier.supplier_id] = supplier;\n                });\n                // Step 3: Fetch IMEI counts for these purchases\n                const purchaseIds = recentPurchases.map((p)=>p.purchase_id);\n                const imeiCounts = await prisma.tbl_imei.groupBy({\n                    by: [\n                        'purchase_id'\n                    ],\n                    _count: {\n                        item_imei: true\n                    },\n                    where: {\n                        purchase_id: {\n                            in: purchaseIds\n                        }\n                    }\n                });\n                // Create an IMEI count map for quick lookup\n                const imeiCountMap = {};\n                imeiCounts.forEach((count)=>{\n                    imeiCountMap[count.purchase_id] = count._count.item_imei;\n                });\n                // Combine the data\n                return recentPurchases.map((purchase)=>({\n                        purchase_id: purchase.purchase_id,\n                        date: purchase.date,\n                        supplier_id: purchase.supplier_id,\n                        qc_required: purchase.qc_required,\n                        qc_completed: purchase.qc_completed,\n                        supplier_name: supplierMap[purchase.supplier_id]?.name || 'Unknown Supplier',\n                        imei_count: imeiCountMap[purchase.purchase_id] || 0\n                    }));\n            })(),\n            // Recent operations from tbl_log (last 3 operations)\n            prisma.$queryRaw`\n        SELECT\n          id,\n          date,\n          item_code,\n          subject,\n          details,\n          ref,\n          auto_time\n        FROM tbl_log\n        ORDER BY auto_time DESC\n        LIMIT 3\n      `,\n            // Available Stock: devices with available_flag = 'Available'\n            // Optimized by using direct tables instead of the complex view\n            prisma.$queryRaw`\n        SELECT COUNT(DISTINCT i.item_imei) as count\n        FROM tbl_imei i\n        JOIN tbl_purchases p ON p.item_imei = i.item_imei\n        WHERE i.status = 1\n          AND (\n            p.qc_required = 0\n            OR (p.qc_required = 1 AND p.qc_completed = 1)\n          )\n          AND (\n            p.repair_required = 0\n            OR (p.repair_required = 1 AND p.repair_completed = 1)\n          )\n      `,\n            // Pending QC: devices with status=1 and qc_required=1 and qc_completed=0\n            // Optimized by using direct tables instead of the complex view\n            prisma.$queryRaw`\n        SELECT COUNT(DISTINCT i.item_imei) as count\n        FROM tbl_imei i\n        JOIN tbl_purchases p ON p.item_imei = i.item_imei\n        WHERE i.status = 1\n          AND p.qc_required = 1\n          AND p.qc_completed = 0\n      `,\n            // Old Stock (90+ days): devices with status=1 and purchase date > 90 days ago\n            prisma.$queryRaw`\n        SELECT COUNT(*) as count\n        FROM tbl_imei i\n        JOIN tbl_purchases p ON p.item_imei = i.item_imei\n        WHERE i.status = 1\n          AND DATEDIFF(CURDATE(), p.date) > 90\n      `\n        ]);\n        // Process recent operations to convert from raw query result to objects\n        const recentOperations = Array.isArray(recentOperationsRaw) ? recentOperationsRaw.map((item)=>({\n                id: item.id,\n                date: item.date,\n                item_code: item.item_code,\n                subject: item.subject,\n                details: item.details,\n                ref: item.ref,\n                auto_time: item.auto_time\n            })) : [];\n        // Extract counts from the raw query results\n        const availableStock = Array.isArray(availableStockCount) && availableStockCount.length > 0 ? Number(availableStockCount[0].count) : 0;\n        const pendingQC = Array.isArray(pendingQCCount) && pendingQCCount.length > 0 ? Number(pendingQCCount[0].count) : 0;\n        const oldStock = Array.isArray(oldStockCount) && oldStockCount.length > 0 ? Number(oldStockCount[0].count) : 0;\n        // Format the response to match frontend expectations\n        const response = {\n            totalProducts,\n            totalCustomers,\n            totalOrders,\n            totalSuppliers,\n            pendingOrders,\n            recentOrders: Array.isArray(recentOrdersRaw) ? recentOrdersRaw.map((order)=>({\n                    id: order.id,\n                    order_id: order.order_id,\n                    customer_id: order.customer_id,\n                    item_imei: order.item_imei,\n                    date: order.date,\n                    po_box: order.po_box,\n                    tracking_no: order.tracking_no,\n                    customer: order.customer_name ? {\n                        name: order.customer_name\n                    } : null\n                })) : [],\n            topSellingProducts: [],\n            lowStockItems: lowStockItems.map((item)=>({\n                    id: item.id,\n                    item_imei: item.item_imei,\n                    item_tac: item.item_tac,\n                    item_color: item.item_color,\n                    item_grade: item.item_grade,\n                    item_gb: item.item_gb,\n                    status: item.status,\n                    created_at: item.created_at\n                })),\n            // New dashboard data points\n            imeiStock,\n            totalInToday,\n            totalOutToday,\n            devicesAwaitingQC,\n            recentGoodsIn: Array.isArray(recentGoodsInRaw) ? recentGoodsInRaw.map((purchase)=>({\n                    purchase_id: purchase.purchase_id,\n                    date: purchase.date,\n                    supplier: null,\n                    supplier_name: purchase.supplier_name || 'Unknown Supplier',\n                    qc_required: purchase.qc_required === 1 ? 'Yes' : 'No',\n                    quantity: purchase.imei_count || 0\n                })) : [],\n            // Updated dashboard data\n            recentOperations,\n            availableStock,\n            pendingQC,\n            oldStock\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(convertBigInts(response));\n    } catch (error) {\n        console.error(\"Dashboard API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch dashboard data\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxJQUFJRCxLQUFLQyxFQUFFO29CQUNYUixXQUFXTyxLQUFLUCxTQUFTO29CQUN6QjRCLFVBQVVyQixLQUFLcUIsUUFBUTtvQkFDdkJDLFlBQVl0QixLQUFLc0IsVUFBVTtvQkFDM0JDLFlBQVl2QixLQUFLdUIsVUFBVTtvQkFDM0JDLFNBQVN4QixLQUFLd0IsT0FBTztvQkFDckJyRCxRQUFRNkIsS0FBSzdCLE1BQU07b0JBQ25Cc0QsWUFBWXpCLEtBQUt5QixVQUFVO2dCQUM3QjtZQUNBLDRCQUE0QjtZQUM1QjVFO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0EwRSxlQUFlcEcsTUFBTUMsT0FBTyxDQUFDMEIsb0JBQ3pCQSxpQkFBaUJ6QixHQUFHLENBQUMsQ0FBQ21FLFdBQW1CO29CQUN2Q1AsYUFBYU8sU0FBU1AsV0FBVztvQkFDakN0QixNQUFNNkIsU0FBUzdCLElBQUk7b0JBQ25Cb0IsVUFBVTtvQkFDVlUsZUFBZUQsU0FBU0MsYUFBYSxJQUFJO29CQUN6Q25CLGFBQWFrQixTQUFTbEIsV0FBVyxLQUFLLElBQUksUUFBUTtvQkFDbERrRCxVQUFVaEMsU0FBU0csVUFBVSxJQUFJO2dCQUNuQyxNQUNBLEVBQUU7WUFDTix5QkFBeUI7WUFDekJDO1lBQ0FRO1lBQ0FFO1lBQ0FDO1FBQ0Y7UUFFQSxPQUFPN0YscURBQVlBLENBQUMrRyxJQUFJLENBQUM1RyxlQUFlMkY7SUFFMUMsRUFBRSxPQUFPa0IsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsd0JBQXdCQTtRQUN0QyxPQUFPaEgscURBQVlBLENBQUMrRyxJQUFJLENBQ3RCO1lBQ0VDLE9BQU87WUFDUHpCLFNBQVN5QixpQkFBaUJFLFFBQVFGLE1BQU1HLE9BQU8sR0FBRztRQUNwRCxHQUNBO1lBQUU3RCxRQUFRO1FBQUk7SUFFbEIsU0FBVTtRQUNSLE1BQU1wRCxPQUFPa0gsV0FBVztJQUMxQjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9nYXNjYXQvRG93bmxvYWRzL3ByaXNtYS1xdWFudHVtLW1haW4vYXBwL2FwaS9kYXNoYm9hcmQvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XG5cbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcblxuLy8gRnVuY3Rpb24gdG8gY29udmVydCBCaWdJbnQgdmFsdWVzIHRvIHN0cmluZ3MgaW4gYW4gb2JqZWN0XG5mdW5jdGlvbiBjb252ZXJ0QmlnSW50cyhvYmo6IGFueSk6IGFueSB7XG4gIGlmIChvYmogPT09IG51bGwgfHwgb2JqID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG4gIFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ2JpZ2ludCcpIHtcbiAgICByZXR1cm4gTnVtYmVyKG9iaik7XG4gIH1cbiAgXG4gIC8vIEhhbmRsZSBEYXRlIG9iamVjdHNcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICByZXR1cm4gb2JqLnRvSVNPU3RyaW5nKCk7XG4gIH1cbiAgXG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICByZXR1cm4gb2JqLm1hcChjb252ZXJ0QmlnSW50cyk7XG4gIH1cbiAgXG4gIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHJlc3VsdDogYW55ID0ge307XG4gICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBjb252ZXJ0QmlnSW50cyhvYmpba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgXG4gIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICAvLyBBdXRoZW50aWNhdGlvbiB0ZW1wb3JhcmlseSBkaXNhYmxlZCBmb3IgdGVzdGluZ1xuICAgIC8vIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKGF1dGhPcHRpb25zKTtcbiAgICBcbiAgICAvLyBpZiAoIXNlc3Npb24pIHtcbiAgICAvLyAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIlVuYXV0aG9yaXplZFwiIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgLy8gfVxuXG4gICAgLy8gR2V0IGN1cnJlbnQgZGF0ZSBmb3IgdGltZS1iYXNlZCBxdWVyaWVzXG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgIHRvZGF5LnNldEhvdXJzKDAsIDAsIDAsIDApOyAvLyBTZXQgdG8gc3RhcnQgb2YgZGF5IGZvciBhY2N1cmF0ZSBjb21wYXJpc29uXG4gICAgY29uc3QgdG9tb3Jyb3cgPSBuZXcgRGF0ZSh0b2RheSk7XG4gICAgdG9tb3Jyb3cuc2V0RGF0ZSh0b21vcnJvdy5nZXREYXRlKCkgKyAxKTtcbiAgICBcbiAgICBjb25zdCBsYXN0TW9udGggPSBuZXcgRGF0ZSh0b2RheS5nZXRGdWxsWWVhcigpLCB0b2RheS5nZXRNb250aCgpIC0gMSwgdG9kYXkuZ2V0RGF0ZSgpKTtcblxuICAgIC8vIEdldCBkYXNoYm9hcmQgZGF0YSBiYXNlZCBvbiBhY3R1YWwgc2NoZW1hXG4gICAgY29uc3QgW1xuICAgICAgdG90YWxQcm9kdWN0cyxcbiAgICAgIHRvdGFsQ3VzdG9tZXJzLFxuICAgICAgdG90YWxPcmRlcnMsXG4gICAgICB0b3RhbFN1cHBsaWVycyxcbiAgICAgIHBlbmRpbmdPcmRlcnMsXG4gICAgICByZWNlbnRPcmRlcnNSYXcsXG4gICAgICBsb3dTdG9ja0l0ZW1zLFxuICAgICAgLy8gTmV3IGRhc2hib2FyZCBkYXRhIHBvaW50c1xuICAgICAgaW1laVN0b2NrLFxuICAgICAgdG90YWxJblRvZGF5LFxuICAgICAgdG90YWxPdXRUb2RheSxcbiAgICAgIGRldmljZXNBd2FpdGluZ1FDLFxuICAgICAgcmVjZW50R29vZHNJblJhdyxcbiAgICAgIC8vIE5ldyBxdWVyaWVzIGZvciB1cGRhdGVkIGRhc2hib2FyZFxuICAgICAgcmVjZW50T3BlcmF0aW9uc1JhdyxcbiAgICAgIGF2YWlsYWJsZVN0b2NrQ291bnQsXG4gICAgICBwZW5kaW5nUUNDb3VudCxcbiAgICAgIG9sZFN0b2NrQ291bnRcbiAgICBdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgLy8gVG90YWwgSU1FSSBwcm9kdWN0cyAtIG9wdGltaXplZCB3aXRoIHBvdGVudGlhbCBpbmRleCB1c2FnZVxuICAgICAgcHJpc21hLnRibF9pbWVpLmNvdW50KCksXG4gICAgICBcbiAgICAgIC8vIFRvdGFsIGN1c3RvbWVyc1xuICAgICAgcHJpc21hLnRibF9jdXN0b21lcnMuY291bnQoKSxcbiAgICAgIFxuICAgICAgLy8gVG90YWwgb3JkZXJzIChkaXN0aW5jdCBvcmRlcl9pZClcbiAgICAgIHByaXNtYS50Ymxfb3JkZXJzLmNvdW50KCksXG4gICAgICBcbiAgICAgIC8vIFRvdGFsIHN1cHBsaWVyc1xuICAgICAgcHJpc21hLnRibF9zdXBwbGllcnMuY291bnQoKSxcbiAgICAgIFxuICAgICAgLy8gUGVuZGluZyBvcmRlcnMgKG5vIHNwZWNpZmljIGRlbGl2ZXJlZCBmaWVsZCwgdXNlIGRhdGUgYXMgcHJveHkpXG4gICAgICBwcmlzbWEudGJsX29yZGVycy5jb3VudCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgZ3RlOiBsYXN0TW9udGhcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgXG4gICAgICAvLyBSZWNlbnQgb3JkZXJzIHdpdGggY3VzdG9tZXIgZGF0YSAob3B0aW1pemVkIHdpdGggSk9JTilcbiAgICAgIHByaXNtYS4kcXVlcnlSYXdgXG4gICAgICAgIFNFTEVDVFxuICAgICAgICAgIG8uaWQsXG4gICAgICAgICAgby5vcmRlcl9pZCxcbiAgICAgICAgICBvLmN1c3RvbWVyX2lkLFxuICAgICAgICAgIG8uaXRlbV9pbWVpLFxuICAgICAgICAgIG8uZGF0ZSxcbiAgICAgICAgICBvLnBvX2JveCxcbiAgICAgICAgICBvLnRyYWNraW5nX25vLFxuICAgICAgICAgIGMubmFtZSBhcyBjdXN0b21lcl9uYW1lXG4gICAgICAgIEZST00gdGJsX29yZGVycyBvXG4gICAgICAgIExFRlQgSk9JTiB0YmxfY3VzdG9tZXJzIGMgT04gby5jdXN0b21lcl9pZCA9IGMuY3VzdG9tZXJfaWRcbiAgICAgICAgT1JERVIgQlkgby5kYXRlIERFU0NcbiAgICAgICAgTElNSVQgNVxuICAgICAgYCxcbiAgICAgIFxuICAgICAgLy8gTG93IHN0b2NrIGl0ZW1zIChpdGVtcyB3aXRoIHNwZWNpZmljIHN0YXR1cylcbiAgICAgIHByaXNtYS50YmxfaW1laS5maW5kTWFueSh7XG4gICAgICAgIHRha2U6IDEwLFxuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIHN0YXR1czogeyBpbjogWzEsIDJdIH1cbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBcbiAgICAgIC8vIElNRUkgU3RvY2s6IFRvdGFsIG5vIG9mIGRldmljZXMgaW4gc3RvY2sgKHN0YXR1cyA9IDEgaW4gdGJsX2ltZWkpXG4gICAgICBwcmlzbWEudGJsX2ltZWkuY291bnQoe1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIHN0YXR1czogMVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIFxuICAgICAgLy8gVG90YWwgSW46IG5vIG9mIHVuaXRzIGJvb2tlZCBpbiB0b2RheVxuICAgICAgLy8gKGZyb20gdGJsX3B1cmNoYXNlcyB3aGVyZSBkYXRlID0gdG9kYXkpXG4gICAgICBwcmlzbWEudGJsX3B1cmNoYXNlcy5jb3VudCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgZGF0ZToge1xuICAgICAgICAgICAgZ3RlOiB0b2RheSxcbiAgICAgICAgICAgIGx0OiB0b21vcnJvd1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBcbiAgICAgIC8vIFRvdGFsIE91dDogbm8gb2YgdW5pdHMgYm9va2VkIG91dCB0b2RheVxuICAgICAgLy8gKGZyb20gdGJsX2ltZWlfc2FsZXNfb3JkZXJzIHdoZXJlIGRhdGUgPSB0b2RheSBhbmQgaXNfY29tcGxldGVkID0gMSlcbiAgICAgIHByaXNtYS50YmxfaW1laV9zYWxlc19vcmRlcnMuY291bnQoe1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIGRhdGU6IHtcbiAgICAgICAgICAgIGd0ZTogdG9kYXksXG4gICAgICAgICAgICBsdDogdG9tb3Jyb3dcbiAgICAgICAgICB9LFxuICAgICAgICAgIGlzX2NvbXBsZXRlZDogMVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIFxuICAgICAgLy8gRGV2aWNlcyBhd2FpdGluZyBRQzogY291bnQgb2YgYWxsIGRldmljZXMgaW4gdGJsX3B1cmNoYXNlc1xuICAgICAgLy8gd2l0aCBxY19yZXF1aXJlZCA9IDEgYW5kIHFjX2NvbXBsZXRlZCA9IDBcbiAgICAgIHByaXNtYS50YmxfcHVyY2hhc2VzLmNvdW50KHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICBxY19yZXF1aXJlZDogMSxcbiAgICAgICAgICBxY19jb21wbGV0ZWQ6IDBcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBcbiAgICAgIC8vIFJlY2VudCBHb29kcyBJbiB0YWJsZTogbW9zdCByZWNlbnQgcHVyY2hhc2VzIHdpdGggc3VwcGxpZXIgaW5mb3JtYXRpb25cbiAgICAgIC8vIE9wdGltaXplZCB0byBhdm9pZCBleHBlbnNpdmUgSk9JTnMgYW5kIEdST1VQIEJZXG4gICAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAvLyBTdGVwIDE6IEZldGNoIHJlY2VudCBwdXJjaGFzZXMgKGRpc3RpbmN0IGJ5IHB1cmNoYXNlX2lkKVxuICAgICAgICBjb25zdCByZWNlbnRQdXJjaGFzZXM6IGFueVtdID0gYXdhaXQgcHJpc21hLiRxdWVyeVJhd2BcbiAgICAgICAgICBTRUxFQ1QgRElTVElOQ1RcbiAgICAgICAgICAgIHB1cmNoYXNlX2lkLFxuICAgICAgICAgICAgZGF0ZSxcbiAgICAgICAgICAgIHN1cHBsaWVyX2lkLFxuICAgICAgICAgICAgcWNfcmVxdWlyZWQsXG4gICAgICAgICAgICBxY19jb21wbGV0ZWRcbiAgICAgICAgICBGUk9NIHRibF9wdXJjaGFzZXNcbiAgICAgICAgICBPUkRFUiBCWSBkYXRlIERFU0NcbiAgICAgICAgICBMSU1JVCAxMFxuICAgICAgICBgO1xuICAgICAgICBcbiAgICAgICAgLy8gU3RlcCAyOiBGZXRjaCBzdXBwbGllciBpbmZvcm1hdGlvbiBmb3IgdGhlc2UgcHVyY2hhc2VzXG4gICAgICAgIGNvbnN0IHN1cHBsaWVySWRzID0gcmVjZW50UHVyY2hhc2VzLm1hcCgocCkgPT4gcC5zdXBwbGllcl9pZCk7XG4gICAgICAgIGNvbnN0IHN1cHBsaWVycyA9IGF3YWl0IHByaXNtYS50Ymxfc3VwcGxpZXJzLmZpbmRNYW55KHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgc3VwcGxpZXJfaWQ6IHtcbiAgICAgICAgICAgICAgaW46IHN1cHBsaWVySWRzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBhIHN1cHBsaWVyIG1hcCBmb3IgcXVpY2sgbG9va3VwXG4gICAgICAgIGNvbnN0IHN1cHBsaWVyTWFwOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge307XG4gICAgICAgIHN1cHBsaWVycy5mb3JFYWNoKChzdXBwbGllcjogYW55KSA9PiB7XG4gICAgICAgICAgc3VwcGxpZXJNYXBbc3VwcGxpZXIuc3VwcGxpZXJfaWRdID0gc3VwcGxpZXI7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gU3RlcCAzOiBGZXRjaCBJTUVJIGNvdW50cyBmb3IgdGhlc2UgcHVyY2hhc2VzXG4gICAgICAgIGNvbnN0IHB1cmNoYXNlSWRzID0gcmVjZW50UHVyY2hhc2VzLm1hcCgocCkgPT4gcC5wdXJjaGFzZV9pZCk7XG4gICAgICAgIGNvbnN0IGltZWlDb3VudHMgPSBhd2FpdCBwcmlzbWEudGJsX2ltZWkuZ3JvdXBCeSh7XG4gICAgICAgICAgYnk6IFsncHVyY2hhc2VfaWQnXSxcbiAgICAgICAgICBfY291bnQ6IHtcbiAgICAgICAgICAgIGl0ZW1faW1laTogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgIHB1cmNoYXNlX2lkOiB7XG4gICAgICAgICAgICAgIGluOiBwdXJjaGFzZUlkc1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBDcmVhdGUgYW4gSU1FSSBjb3VudCBtYXAgZm9yIHF1aWNrIGxvb2t1cFxuICAgICAgICBjb25zdCBpbWVpQ291bnRNYXA6IFJlY29yZDxudW1iZXIsIG51bWJlcj4gPSB7fTtcbiAgICAgICAgaW1laUNvdW50cy5mb3JFYWNoKChjb3VudDogYW55KSA9PiB7XG4gICAgICAgICAgaW1laUNvdW50TWFwW2NvdW50LnB1cmNoYXNlX2lkXSA9IGNvdW50Ll9jb3VudC5pdGVtX2ltZWk7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gQ29tYmluZSB0aGUgZGF0YVxuICAgICAgICByZXR1cm4gcmVjZW50UHVyY2hhc2VzLm1hcCgocHVyY2hhc2UpID0+ICh7XG4gICAgICAgICAgcHVyY2hhc2VfaWQ6IHB1cmNoYXNlLnB1cmNoYXNlX2lkLFxuICAgICAgICAgIGRhdGU6IHB1cmNoYXNlLmRhdGUsXG4gICAgICAgICAgc3VwcGxpZXJfaWQ6IHB1cmNoYXNlLnN1cHBsaWVyX2lkLFxuICAgICAgICAgIHFjX3JlcXVpcmVkOiBwdXJjaGFzZS5xY19yZXF1aXJlZCxcbiAgICAgICAgICBxY19jb21wbGV0ZWQ6IHB1cmNoYXNlLnFjX2NvbXBsZXRlZCxcbiAgICAgICAgICBzdXBwbGllcl9uYW1lOiBzdXBwbGllck1hcFtwdXJjaGFzZS5zdXBwbGllcl9pZF0/Lm5hbWUgfHwgJ1Vua25vd24gU3VwcGxpZXInLFxuICAgICAgICAgIGltZWlfY291bnQ6IGltZWlDb3VudE1hcFtwdXJjaGFzZS5wdXJjaGFzZV9pZF0gfHwgMFxuICAgICAgICB9KSk7XG4gICAgICB9KSgpLFxuICAgICAgXG4gICAgICAvLyBSZWNlbnQgb3BlcmF0aW9ucyBmcm9tIHRibF9sb2cgKGxhc3QgMyBvcGVyYXRpb25zKVxuICAgICAgcHJpc21hLiRxdWVyeVJhd2BcbiAgICAgICAgU0VMRUNUXG4gICAgICAgICAgaWQsXG4gICAgICAgICAgZGF0ZSxcbiAgICAgICAgICBpdGVtX2NvZGUsXG4gICAgICAgICAgc3ViamVjdCxcbiAgICAgICAgICBkZXRhaWxzLFxuICAgICAgICAgIHJlZixcbiAgICAgICAgICBhdXRvX3RpbWVcbiAgICAgICAgRlJPTSB0YmxfbG9nXG4gICAgICAgIE9SREVSIEJZIGF1dG9fdGltZSBERVNDXG4gICAgICAgIExJTUlUIDNcbiAgICAgIGAsXG4gICAgICBcbiAgICAgIC8vIEF2YWlsYWJsZSBTdG9jazogZGV2aWNlcyB3aXRoIGF2YWlsYWJsZV9mbGFnID0gJ0F2YWlsYWJsZSdcbiAgICAgIC8vIE9wdGltaXplZCBieSB1c2luZyBkaXJlY3QgdGFibGVzIGluc3RlYWQgb2YgdGhlIGNvbXBsZXggdmlld1xuICAgICAgcHJpc21hLiRxdWVyeVJhd2BcbiAgICAgICAgU0VMRUNUIENPVU5UKERJU1RJTkNUIGkuaXRlbV9pbWVpKSBhcyBjb3VudFxuICAgICAgICBGUk9NIHRibF9pbWVpIGlcbiAgICAgICAgSk9JTiB0YmxfcHVyY2hhc2VzIHAgT04gcC5pdGVtX2ltZWkgPSBpLml0ZW1faW1laVxuICAgICAgICBXSEVSRSBpLnN0YXR1cyA9IDFcbiAgICAgICAgICBBTkQgKFxuICAgICAgICAgICAgcC5xY19yZXF1aXJlZCA9IDBcbiAgICAgICAgICAgIE9SIChwLnFjX3JlcXVpcmVkID0gMSBBTkQgcC5xY19jb21wbGV0ZWQgPSAxKVxuICAgICAgICAgIClcbiAgICAgICAgICBBTkQgKFxuICAgICAgICAgICAgcC5yZXBhaXJfcmVxdWlyZWQgPSAwXG4gICAgICAgICAgICBPUiAocC5yZXBhaXJfcmVxdWlyZWQgPSAxIEFORCBwLnJlcGFpcl9jb21wbGV0ZWQgPSAxKVxuICAgICAgICAgIClcbiAgICAgIGAsXG4gICAgICBcbiAgICAgIC8vIFBlbmRpbmcgUUM6IGRldmljZXMgd2l0aCBzdGF0dXM9MSBhbmQgcWNfcmVxdWlyZWQ9MSBhbmQgcWNfY29tcGxldGVkPTBcbiAgICAgIC8vIE9wdGltaXplZCBieSB1c2luZyBkaXJlY3QgdGFibGVzIGluc3RlYWQgb2YgdGhlIGNvbXBsZXggdmlld1xuICAgICAgcHJpc21hLiRxdWVyeVJhd2BcbiAgICAgICAgU0VMRUNUIENPVU5UKERJU1RJTkNUIGkuaXRlbV9pbWVpKSBhcyBjb3VudFxuICAgICAgICBGUk9NIHRibF9pbWVpIGlcbiAgICAgICAgSk9JTiB0YmxfcHVyY2hhc2VzIHAgT04gcC5pdGVtX2ltZWkgPSBpLml0ZW1faW1laVxuICAgICAgICBXSEVSRSBpLnN0YXR1cyA9IDFcbiAgICAgICAgICBBTkQgcC5xY19yZXF1aXJlZCA9IDFcbiAgICAgICAgICBBTkQgcC5xY19jb21wbGV0ZWQgPSAwXG4gICAgICBgLFxuICAgICAgXG4gICAgICAvLyBPbGQgU3RvY2sgKDkwKyBkYXlzKTogZGV2aWNlcyB3aXRoIHN0YXR1cz0xIGFuZCBwdXJjaGFzZSBkYXRlID4gOTAgZGF5cyBhZ29cbiAgICAgIHByaXNtYS4kcXVlcnlSYXdgXG4gICAgICAgIFNFTEVDVCBDT1VOVCgqKSBhcyBjb3VudFxuICAgICAgICBGUk9NIHRibF9pbWVpIGlcbiAgICAgICAgSk9JTiB0YmxfcHVyY2hhc2VzIHAgT04gcC5pdGVtX2ltZWkgPSBpLml0ZW1faW1laVxuICAgICAgICBXSEVSRSBpLnN0YXR1cyA9IDFcbiAgICAgICAgICBBTkQgREFURURJRkYoQ1VSREFURSgpLCBwLmRhdGUpID4gOTBcbiAgICAgIGBcbiAgICBdKTtcblxuXG4gICAgLy8gUHJvY2VzcyByZWNlbnQgb3BlcmF0aW9ucyB0byBjb252ZXJ0IGZyb20gcmF3IHF1ZXJ5IHJlc3VsdCB0byBvYmplY3RzXG4gICAgY29uc3QgcmVjZW50T3BlcmF0aW9ucyA9IEFycmF5LmlzQXJyYXkocmVjZW50T3BlcmF0aW9uc1JhdylcbiAgICAgID8gcmVjZW50T3BlcmF0aW9uc1Jhdy5tYXAoKGl0ZW06IGFueSkgPT4gKHtcbiAgICAgICAgICBpZDogaXRlbS5pZCxcbiAgICAgICAgICBkYXRlOiBpdGVtLmRhdGUsXG4gICAgICAgICAgaXRlbV9jb2RlOiBpdGVtLml0ZW1fY29kZSxcbiAgICAgICAgICBzdWJqZWN0OiBpdGVtLnN1YmplY3QsXG4gICAgICAgICAgZGV0YWlsczogaXRlbS5kZXRhaWxzLFxuICAgICAgICAgIHJlZjogaXRlbS5yZWYsXG4gICAgICAgICAgYXV0b190aW1lOiBpdGVtLmF1dG9fdGltZVxuICAgICAgICB9KSlcbiAgICAgIDogW107XG5cbiAgICAvLyBFeHRyYWN0IGNvdW50cyBmcm9tIHRoZSByYXcgcXVlcnkgcmVzdWx0c1xuICAgIGNvbnN0IGF2YWlsYWJsZVN0b2NrID0gQXJyYXkuaXNBcnJheShhdmFpbGFibGVTdG9ja0NvdW50KSAmJiBhdmFpbGFibGVTdG9ja0NvdW50Lmxlbmd0aCA+IDBcbiAgICAgID8gTnVtYmVyKGF2YWlsYWJsZVN0b2NrQ291bnRbMF0uY291bnQpXG4gICAgICA6IDA7XG4gICAgICBcbiAgICBjb25zdCBwZW5kaW5nUUMgPSBBcnJheS5pc0FycmF5KHBlbmRpbmdRQ0NvdW50KSAmJiBwZW5kaW5nUUNDb3VudC5sZW5ndGggPiAwXG4gICAgICA/IE51bWJlcihwZW5kaW5nUUNDb3VudFswXS5jb3VudClcbiAgICAgIDogMDtcbiAgICAgIFxuICAgIGNvbnN0IG9sZFN0b2NrID0gQXJyYXkuaXNBcnJheShvbGRTdG9ja0NvdW50KSAmJiBvbGRTdG9ja0NvdW50Lmxlbmd0aCA+IDBcbiAgICAgID8gTnVtYmVyKG9sZFN0b2NrQ291bnRbMF0uY291bnQpXG4gICAgICA6IDA7XG5cbiAgICAvLyBGb3JtYXQgdGhlIHJlc3BvbnNlIHRvIG1hdGNoIGZyb250ZW5kIGV4cGVjdGF0aW9uc1xuICAgIGNvbnN0IHJlc3BvbnNlID0ge1xuICAgICAgdG90YWxQcm9kdWN0cyxcbiAgICAgIHRvdGFsQ3VzdG9tZXJzLFxuICAgICAgdG90YWxPcmRlcnMsXG4gICAgICB0b3RhbFN1cHBsaWVycyxcbiAgICAgIHBlbmRpbmdPcmRlcnMsXG4gICAgICByZWNlbnRPcmRlcnM6IEFycmF5LmlzQXJyYXkocmVjZW50T3JkZXJzUmF3KVxuICAgICAgICA/IHJlY2VudE9yZGVyc1Jhdy5tYXAoKG9yZGVyOiBhbnkpID0+ICh7XG4gICAgICAgICAgICBpZDogb3JkZXIuaWQsXG4gICAgICAgICAgICBvcmRlcl9pZDogb3JkZXIub3JkZXJfaWQsXG4gICAgICAgICAgICBjdXN0b21lcl9pZDogb3JkZXIuY3VzdG9tZXJfaWQsXG4gICAgICAgICAgICBpdGVtX2ltZWk6IG9yZGVyLml0ZW1faW1laSxcbiAgICAgICAgICAgIGRhdGU6IG9yZGVyLmRhdGUsXG4gICAgICAgICAgICBwb19ib3g6IG9yZGVyLnBvX2JveCxcbiAgICAgICAgICAgIHRyYWNraW5nX25vOiBvcmRlci50cmFja2luZ19ubyxcbiAgICAgICAgICAgIGN1c3RvbWVyOiBvcmRlci5jdXN0b21lcl9uYW1lID8geyBuYW1lOiBvcmRlci5jdXN0b21lcl9uYW1lIH0gOiBudWxsXG4gICAgICAgICAgfSkpXG4gICAgICAgIDogW10sXG4gICAgICB0b3BTZWxsaW5nUHJvZHVjdHM6IFtdLCAvLyBZb3UgY2FuIGltcGxlbWVudCB0aGlzIGxhdGVyXG4gICAgICBsb3dTdG9ja0l0ZW1zOiBsb3dTdG9ja0l0ZW1zLm1hcCgoaXRlbTogYW55KSA9PiAoe1xuICAgICAgICBpZDogaXRlbS5pZCxcbiAgICAgICAgaXRlbV9pbWVpOiBpdGVtLml0ZW1faW1laSxcbiAgICAgICAgaXRlbV90YWM6IGl0ZW0uaXRlbV90YWMsXG4gICAgICAgIGl0ZW1fY29sb3I6IGl0ZW0uaXRlbV9jb2xvcixcbiAgICAgICAgaXRlbV9ncmFkZTogaXRlbS5pdGVtX2dyYWRlLFxuICAgICAgICBpdGVtX2diOiBpdGVtLml0ZW1fZ2IsXG4gICAgICAgIHN0YXR1czogaXRlbS5zdGF0dXMsXG4gICAgICAgIGNyZWF0ZWRfYXQ6IGl0ZW0uY3JlYXRlZF9hdFxuICAgICAgfSkpLFxuICAgICAgLy8gTmV3IGRhc2hib2FyZCBkYXRhIHBvaW50c1xuICAgICAgaW1laVN0b2NrLFxuICAgICAgdG90YWxJblRvZGF5LFxuICAgICAgdG90YWxPdXRUb2RheSxcbiAgICAgIGRldmljZXNBd2FpdGluZ1FDLFxuICAgICAgcmVjZW50R29vZHNJbjogQXJyYXkuaXNBcnJheShyZWNlbnRHb29kc0luUmF3KVxuICAgICAgICA/IHJlY2VudEdvb2RzSW5SYXcubWFwKChwdXJjaGFzZTogYW55KSA9PiAoe1xuICAgICAgICAgICAgcHVyY2hhc2VfaWQ6IHB1cmNoYXNlLnB1cmNoYXNlX2lkLFxuICAgICAgICAgICAgZGF0ZTogcHVyY2hhc2UuZGF0ZSxcbiAgICAgICAgICAgIHN1cHBsaWVyOiBudWxsLCAvLyBTdXBwbGllciBpbmZvIGlzIG5vdyBpbiBzdXBwbGllcl9uYW1lIGZpZWxkXG4gICAgICAgICAgICBzdXBwbGllcl9uYW1lOiBwdXJjaGFzZS5zdXBwbGllcl9uYW1lIHx8ICdVbmtub3duIFN1cHBsaWVyJyxcbiAgICAgICAgICAgIHFjX3JlcXVpcmVkOiBwdXJjaGFzZS5xY19yZXF1aXJlZCA9PT0gMSA/ICdZZXMnIDogJ05vJyxcbiAgICAgICAgICAgIHF1YW50aXR5OiBwdXJjaGFzZS5pbWVpX2NvdW50IHx8IDBcbiAgICAgICAgICB9KSlcbiAgICAgICAgOiBbXSxcbiAgICAgIC8vIFVwZGF0ZWQgZGFzaGJvYXJkIGRhdGFcbiAgICAgIHJlY2VudE9wZXJhdGlvbnMsXG4gICAgICBhdmFpbGFibGVTdG9jayxcbiAgICAgIHBlbmRpbmdRQyxcbiAgICAgIG9sZFN0b2NrXG4gICAgfTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihjb252ZXJ0QmlnSW50cyhyZXNwb25zZSkpO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkRhc2hib2FyZCBBUEkgZXJyb3I6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7XG4gICAgICAgIGVycm9yOiBcIkZhaWxlZCB0byBmZXRjaCBkYXNoYm9hcmQgZGF0YVwiLFxuICAgICAgICBkZXRhaWxzOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH0gZmluYWxseSB7XG4gICAgYXdhaXQgcHJpc21hLiRkaXNjb25uZWN0KCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJjb252ZXJ0QmlnSW50cyIsIm9iaiIsInVuZGVmaW5lZCIsIk51bWJlciIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInJlc3VsdCIsImtleSIsImhhc093blByb3BlcnR5IiwiR0VUIiwicmVxdWVzdCIsInRvZGF5Iiwic2V0SG91cnMiLCJ0b21vcnJvdyIsInNldERhdGUiLCJnZXREYXRlIiwibGFzdE1vbnRoIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsInRvdGFsUHJvZHVjdHMiLCJ0b3RhbEN1c3RvbWVycyIsInRvdGFsT3JkZXJzIiwidG90YWxTdXBwbGllcnMiLCJwZW5kaW5nT3JkZXJzIiwicmVjZW50T3JkZXJzUmF3IiwibG93U3RvY2tJdGVtcyIsImltZWlTdG9jayIsInRvdGFsSW5Ub2RheSIsInRvdGFsT3V0VG9kYXkiLCJkZXZpY2VzQXdhaXRpbmdRQyIsInJlY2VudEdvb2RzSW5SYXciLCJyZWNlbnRPcGVyYXRpb25zUmF3IiwiYXZhaWxhYmxlU3RvY2tDb3VudCIsInBlbmRpbmdRQ0NvdW50Iiwib2xkU3RvY2tDb3VudCIsIlByb21pc2UiLCJhbGwiLCJ0YmxfaW1laSIsImNvdW50IiwidGJsX2N1c3RvbWVycyIsInRibF9vcmRlcnMiLCJ0Ymxfc3VwcGxpZXJzIiwid2hlcmUiLCJkYXRlIiwiZ3RlIiwiJHF1ZXJ5UmF3IiwiZmluZE1hbnkiLCJ0YWtlIiwic3RhdHVzIiwiaW4iLCJ0YmxfcHVyY2hhc2VzIiwibHQiLCJ0YmxfaW1laV9zYWxlc19vcmRlcnMiLCJpc19jb21wbGV0ZWQiLCJxY19yZXF1aXJlZCIsInFjX2NvbXBsZXRlZCIsInJlY2VudFB1cmNoYXNlcyIsInN1cHBsaWVySWRzIiwicCIsInN1cHBsaWVyX2lkIiwic3VwcGxpZXJzIiwic3VwcGxpZXJNYXAiLCJmb3JFYWNoIiwic3VwcGxpZXIiLCJwdXJjaGFzZUlkcyIsInB1cmNoYXNlX2lkIiwiaW1laUNvdW50cyIsImdyb3VwQnkiLCJieSIsIl9jb3VudCIsIml0ZW1faW1laSIsImltZWlDb3VudE1hcCIsInB1cmNoYXNlIiwic3VwcGxpZXJfbmFtZSIsIm5hbWUiLCJpbWVpX2NvdW50IiwicmVjZW50T3BlcmF0aW9ucyIsIml0ZW0iLCJpZCIsIml0ZW1fY29kZSIsInN1YmplY3QiLCJkZXRhaWxzIiwicmVmIiwiYXV0b190aW1lIiwiYXZhaWxhYmxlU3RvY2siLCJsZW5ndGgiLCJwZW5kaW5nUUMiLCJvbGRTdG9jayIsInJlc3BvbnNlIiwicmVjZW50T3JkZXJzIiwib3JkZXIiLCJvcmRlcl9pZCIsImN1c3RvbWVyX2lkIiwicG9fYm94IiwidHJhY2tpbmdfbm8iLCJjdXN0b21lciIsImN1c3RvbWVyX25hbWUiLCJ0b3BTZWxsaW5nUHJvZHVjdHMiLCJpdGVtX3RhYyIsIml0ZW1fY29sb3IiLCJpdGVtX2dyYWRlIiwiaXRlbV9nYiIsImNyZWF0ZWRfYXQiLCJyZWNlbnRHb29kc0luIiwicXVhbnRpdHkiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiRXJyb3IiLCJtZXNzYWdlIiwiJGRpc2Nvbm5lY3QiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/dashboard/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _home_gascat_Downloads_prisma_quantum_main_app_api_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/dashboard/route.ts */ \"(rsc)/./app/api/dashboard/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/dashboard/route\",\n        pathname: \"/api/dashboard\",\n        filename: \"route\",\n        bundlePath: \"app/api/dashboard/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/home/gascat/Downloads/prisma-quantum-main/app/api/dashboard/route.ts\",\n    nextConfigOutput,\n    userland: _home_gascat_Downloads_prisma_quantum_main_app_api_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/dashboard/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2FDownloads%2Fprisma-quantum-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();