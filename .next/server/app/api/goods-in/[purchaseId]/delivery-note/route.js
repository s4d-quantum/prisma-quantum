/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/goods-in/[purchaseId]/delivery-note/route";
exports.ids = ["app/api/goods-in/[purchaseId]/delivery-note/route"];
exports.modules = {

/***/ "(rsc)/./app/api/goods-in/[purchaseId]/delivery-note/route.ts":
/*!**************************************************************!*\
  !*** ./app/api/goods-in/[purchaseId]/delivery-note/route.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\nasync function buildDeliveryData(purchaseId) {\n    // Get purchase order details from tbl_purchases\n    const purchaseRecords = await prisma.tbl_purchases.findMany({\n        where: {\n            purchase_id: purchaseId\n        },\n        take: 1\n    });\n    if (!purchaseRecords || purchaseRecords.length === 0) throw new Error(\"Purchase order not found\");\n    const purchase = purchaseRecords[0];\n    // Get supplier details\n    const supplier = purchase.supplier_id ? await prisma.tbl_suppliers.findFirst({\n        where: {\n            supplier_id: purchase.supplier_id\n        }\n    }) : null;\n    // Get company settings\n    const companySettings = await prisma.tbl_settings.findFirst();\n    // Get all devices for this purchase order from the view\n    const deviceResults = await prisma.$queryRaw`\n    SELECT * FROM vw_purchase_order_devices WHERE purchase_order_id = ${purchaseId}\n  `;\n    // Convert devices to our Device type\n    const devices = deviceResults.map((d)=>({\n            imei: d.imei || \"N/A\",\n            manufacturer: d.manufacturer || \"N/A\",\n            model_no: d.model_no || \"N/A\",\n            color: d.color || \"N/A\",\n            storage: d.storage || \"N/A\",\n            grade: d.grade || \"N/A\",\n            status: d.status || \"N/A\",\n            supplier: d.supplier || \"N/A\",\n            qc_required: d.qc_required || \"No\",\n            qc_complete: d.qc_complete || \"No\",\n            repair_required: d.repair_required || \"No\",\n            repair_complete: d.repair_complete || \"No\",\n            tray_id: d.tray_id || \"N/A\"\n        }));\n    return {\n        purchase,\n        supplier,\n        companySettings,\n        devices\n    };\n}\nasync function createPdfBuffer({ purchaseId, purchase, supplier, companySettings, devices }) {\n    const PDFDocument = (await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/crypto-js\"), __webpack_require__.e(\"vendor-chunks/restructure\"), __webpack_require__.e(\"vendor-chunks/brotli\"), __webpack_require__.e(\"vendor-chunks/unicode-trie\"), __webpack_require__.e(\"vendor-chunks/linebreak\"), __webpack_require__.e(\"vendor-chunks/jpeg-exif\"), __webpack_require__.e(\"vendor-chunks/fontkit\"), __webpack_require__.e(\"vendor-chunks/unicode-properties\"), __webpack_require__.e(\"vendor-chunks/tslib\"), __webpack_require__.e(\"vendor-chunks/@swc\"), __webpack_require__.e(\"vendor-chunks/tiny-inflate\"), __webpack_require__.e(\"vendor-chunks/png-js\"), __webpack_require__.e(\"vendor-chunks/pdfkit\"), __webpack_require__.e(\"vendor-chunks/fast-deep-equal\"), __webpack_require__.e(\"vendor-chunks/dfa\"), __webpack_require__.e(\"vendor-chunks/base64-js\")]).then(__webpack_require__.bind(__webpack_require__, /*! pdfkit */ \"(rsc)/./node_modules/pdfkit/js/pdfkit.es.js\"))).default;\n    // Professional look & feel\n    const doc = new PDFDocument({\n        size: \"A4\",\n        margin: 36\n    }); // ~0.5\" margins\n    const chunks = [];\n    const pageWidth = doc.page.width;\n    const left = 36;\n    const right = pageWidth - 36;\n    const COLORS = {\n        accent: \"#0a66c2\",\n        text: \"#222222\",\n        subtle: \"#666666\",\n        rule: \"#e0e0e0\",\n        tableHeaderBg: \"#f5f7fb\"\n    };\n    // Set up event handlers before using any PDF features\n    doc.on(\"data\", (chunk)=>chunks.push(chunk));\n    const endPromise = new Promise((resolve)=>doc.on(\"end\", ()=>resolve()));\n    // Use PDFKit core fonts only (no file paths). Valid names: Helvetica, Times-Roman, Courier, etc.\n    doc.font(\"Helvetica\");\n    doc.fillColor(COLORS.text);\n    doc.fontSize(10);\n    // Header: title bar\n    const titleBarY = doc.y;\n    doc.rect(left, titleBarY, right - left, 24).fill(COLORS.tableHeaderBg);\n    doc.fillColor(COLORS.accent);\n    doc.font(\"Helvetica\").fontSize(15).text(\"Delivery Note\", left + 8, titleBarY + 6);\n    doc.fillColor(COLORS.text);\n    // Company (left) and Meta (right) columns WITHOUT a divider yet\n    doc.moveDown(0.8);\n    const colTopY = doc.y;\n    const leftColW = 300;\n    const rightColW = right - (left + leftColW);\n    // Company info - slightly smaller to avoid crowding\n    let companyEndY = colTopY;\n    if (companySettings) {\n        doc.font(\"Helvetica\").fontSize(12).text(companySettings.company_title || \"S4D Limited\", left, companyEndY, {\n            width: leftColW\n        });\n        doc.font(\"Helvetica\").fontSize(9).fillColor(COLORS.subtle);\n        companyEndY = doc.y;\n        if (companySettings.address) doc.text(companySettings.address, left, companyEndY, {\n            width: leftColW\n        });\n        if ([\n            companySettings.city,\n            companySettings.country\n        ].some(Boolean)) {\n            doc.text([\n                companySettings.city,\n                companySettings.country\n            ].filter(Boolean).join(\", \"), {\n                width: leftColW\n            });\n        }\n        if (companySettings.postcode) doc.text(companySettings.postcode, {\n            width: leftColW\n        });\n        if (companySettings.phone) doc.text(`Office: ${companySettings.phone}`, {\n            width: leftColW\n        });\n        if (companySettings.email) doc.text(companySettings.email, {\n            width: leftColW\n        });\n        doc.text(\"www.s4dltd.com\", {\n            width: leftColW\n        });\n        companyEndY = doc.y; // ensure end Y is after URL\n    }\n    // Purchase meta (right) - right aligned, anchored at colTopY\n    doc.fillColor(COLORS.text);\n    doc.font(\"Helvetica\").fontSize(12);\n    doc.text(`Purchase #: PO-${purchaseId}`, left + leftColW, colTopY, {\n        width: rightColW,\n        align: \"right\"\n    });\n    doc.font(\"Helvetica\").fontSize(10).fillColor(COLORS.subtle);\n    doc.text(`Date: ${purchase.date ? new Date(purchase.date).toLocaleDateString() : \"N/A\"}`, left + leftColW, doc.y, {\n        width: rightColW,\n        align: \"right\"\n    });\n    // Force the y-position below the full company block (after URL) before drawing divider\n    const afterColumnsY = Math.max(doc.y, companyEndY);\n    doc.y = afterColumnsY + 8; // add a bit more spacing to ensure it's clearly below\n    doc.strokeColor(COLORS.rule).moveTo(left, doc.y).lineTo(right, doc.y).stroke();\n    // Supplier section: right-justified ADDRESS ONLY; meta stays left-aligned under the line\n    doc.moveDown(0.6);\n    // Move just the \"Supplier\" label to the right so it sits above the right-justified address\n    doc.font(\"Helvetica-Bold\").fontSize(11).fillColor(COLORS.text).text(\"Supplier\", left + leftColW, doc.y, {\n        width: right - (left + leftColW),\n        align: \"right\"\n    });\n    doc.moveDown(0.2);\n    if (supplier) {\n        doc.font(\"Helvetica\").fontSize(10).fillColor(COLORS.text);\n        const addressLines = [];\n        if (supplier.name) addressLines.push(String(supplier.name));\n        if (supplier.address) addressLines.push(String(supplier.address));\n        if (supplier.address2) addressLines.push(String(supplier.address2));\n        const cityCountry = [\n            supplier.city,\n            supplier.country\n        ].filter(Boolean).join(\", \");\n        if (cityCountry) addressLines.push(cityCountry);\n        if (supplier.postcode) addressLines.push(String(supplier.postcode));\n        if (supplier.phone) addressLines.push(String(supplier.phone));\n        if (supplier.email) addressLines.push(String(supplier.email));\n        // Right-justify only the address block on the right half\n        const pad = 6;\n        const addrX = left + leftColW + pad;\n        const addrW = right - addrX - pad;\n        // Top faint rule to visually contain this block\n        const startY = doc.y;\n        doc.rect(left, startY, right - left, 0.1).fill(COLORS.rule);\n        doc.fillColor(COLORS.text);\n        doc.moveDown(0.2);\n        addressLines.forEach((t)=>{\n            doc.text(t, addrX, doc.y + 2, {\n                width: addrW,\n                align: \"right\"\n            });\n        });\n        // Left-aligned meta list under the divider, on the LEFT side\n        doc.moveDown(0.4);\n        const metaStartY = Math.max(doc.y, startY);\n        doc.y = metaStartY;\n        const metaPairs = [\n            [\n                \"PO Reference\",\n                purchase.po_ref || \"N/A\"\n            ],\n            [\n                \"QC Required\",\n                purchase.qc_required === 1 ? \"Yes\" : \"No\"\n            ],\n            [\n                \"Repair Required\",\n                purchase.repair_required === 1 ? \"Yes\" : \"No\"\n            ],\n            [\n                \"Total Devices\",\n                String(devices.length)\n            ]\n        ];\n        const labelW = 100;\n        const metaX = left + pad;\n        const metaW = left + leftColW - metaX - pad;\n        metaPairs.forEach(([k, v])=>{\n            doc.font(\"Helvetica-Bold\").fillColor(COLORS.text).text(`${k}:`, metaX, doc.y, {\n                width: labelW\n            });\n            doc.font(\"Helvetica\").fillColor(COLORS.subtle).text(v, metaX + labelW + 6, doc.y - 12, {\n                width: metaW - labelW - 6\n            });\n            doc.fillColor(COLORS.text);\n            doc.moveDown(0.2);\n        });\n        // Bottom rule for the whole supplier block\n        doc.moveDown(0.2);\n        doc.strokeColor(COLORS.rule).moveTo(left, doc.y + 2).lineTo(right, doc.y + 2).stroke();\n        doc.moveDown(0.6);\n    } else {\n        doc.font(\"Helvetica-Oblique\").fontSize(10).fillColor(COLORS.subtle).text(\"N/A\", left + leftColW, doc.y, {\n            width: rightColW,\n            align: \"right\"\n        });\n    }\n    // Items table - individual devices (not grouped)\n    // Header row\n    doc.rect(left, doc.y, right - left, 20).fill(COLORS.tableHeaderBg);\n    doc.fillColor(COLORS.text).font(\"Helvetica-Bold\").fontSize(10);\n    const headerY = doc.y + 4;\n    // Define column positions\n    const imeiX = left + 8;\n    const manufacturerX = imeiX + 120;\n    const modelX = manufacturerX + 80;\n    const colorX = modelX + 70;\n    const storageX = colorX + 50;\n    const gradeX = storageX + 40;\n    const trayX = gradeX + 30;\n    doc.text(\"IMEI\", imeiX, headerY, {\n        width: manufacturerX - imeiX - 8\n    });\n    doc.text(\"Manufacturer\", manufacturerX, headerY, {\n        width: modelX - manufacturerX - 8\n    });\n    doc.text(\"Model\", modelX, headerY, {\n        width: colorX - modelX - 8\n    });\n    doc.text(\"Color\", colorX, headerY, {\n        width: storageX - colorX - 8\n    });\n    doc.text(\"GB\", storageX, headerY, {\n        width: gradeX - storageX - 8\n    });\n    doc.text(\"Grade\", gradeX, headerY, {\n        width: trayX - gradeX - 8\n    });\n    doc.text(\"Tray\", trayX, headerY, {\n        width: right - trayX - 8\n    });\n    doc.moveDown(1.2);\n    doc.font(\"Helvetica\").fontSize(9).fillColor(COLORS.text);\n    // Rows with light horizontal lines\n    devices.forEach((device)=>{\n        const rowY = doc.y + 2;\n        doc.text(device.imei, imeiX, rowY, {\n            width: manufacturerX - imeiX - 8\n        });\n        doc.text(device.manufacturer, manufacturerX, rowY, {\n            width: modelX - manufacturerX - 8\n        });\n        doc.text(device.model_no, modelX, rowY, {\n            width: colorX - modelX - 8\n        });\n        doc.text(device.color, colorX, rowY, {\n            width: storageX - colorX - 8\n        });\n        doc.text(device.storage, storageX, rowY, {\n            width: gradeX - storageX - 8\n        });\n        doc.text(device.grade, gradeX, rowY, {\n            width: trayX - gradeX - 8\n        });\n        doc.text(device.tray_id, trayX, rowY, {\n            width: right - trayX - 8\n        });\n        const rowBottom = doc.y + 4;\n        doc.strokeColor(COLORS.rule).moveTo(left, rowBottom).lineTo(right, rowBottom).stroke();\n        doc.y = rowBottom;\n    });\n    // Total row\n    doc.moveDown(0.4);\n    doc.font(\"Helvetica-Bold\").fillColor(COLORS.text);\n    doc.text(`Total Devices: ${devices.length}`, imeiX, doc.y, {\n        width: right - imeiX - 8\n    });\n    // Signature section\n    doc.moveDown(1.0);\n    const drawSig = (label)=>{\n        doc.font(\"Helvetica\").fontSize(10).fillColor(COLORS.text).text(label, left, doc.y + 6);\n        const y = doc.y + 10;\n        doc.strokeColor(\"#000\").moveTo(left + 120, y).lineTo(right - 150, y).stroke();\n        doc.moveDown(0.6);\n    };\n    drawSig(\"Received by:\");\n    drawSig(\"Checked by:\");\n    drawSig(\"Date:\");\n    // Footer notes\n    doc.moveDown(0.8);\n    doc.font(\"Helvetica-Bold\").fontSize(9).fillColor(COLORS.text).text(\"ALL ITEMS MUST BE CHECKED AGAINST THIS DELIVERY NOTE UPON RECEIPT\", {\n        align: \"center\"\n    });\n    doc.moveDown(0.2);\n    doc.font(\"Helvetica\").fontSize(7).fillColor(\"#777777\").text(\"Confidentiality Notice: This document has been sent by S4D Limited (registered in England and Wales with number 9342012). \" + \"Registered office: Ebenezer House, Ryecroft, Newcastle Under Lyme, Staffordshire, ST5 2BE. This document is confidential and intended for the use of the named recipient only. \" + \"If you are not the intended recipient, please notify us immediately. Please note that this document and any attachments have not been encrypted. \" + \"They may, therefore, be liable to be compromised. Please also note that it is your responsibility to scan this document and any attachments for viruses.\", {\n        align: \"left\"\n    });\n    doc.end();\n    await endPromise;\n    return Buffer.concat(chunks);\n}\n// GET /api/goods-in/[purchaseId]/delivery-note - Generate delivery note for a goods in purchase order\nasync function GET(request, { params }) {\n    try {\n        const { purchaseId: purchaseIdParam } = await params;\n        const purchaseId = parseInt(purchaseIdParam);\n        if (isNaN(purchaseId)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid purchase ID\"\n            }, {\n                status: 400\n            });\n        }\n        const data = await buildDeliveryData(purchaseId);\n        const pdfBuffer = await createPdfBuffer({\n            purchaseId,\n            ...data\n        });\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(pdfBuffer, {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/pdf\",\n                \"Content-Disposition\": `attachment; filename=\"delivery-note-${purchaseId}.pdf\"`,\n                \"Content-Length\": String(pdfBuffer.length)\n            }\n        });\n    } catch (error) {\n        console.error(\"Delivery Note GET error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to generate delivery note: \" + (error instanceof Error ? error.message : \"Unknown error\")\n        }, {\n            status: 500\n        });\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/goods-in/[purchaseId]/delivery-note/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&page=%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute.ts&appDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&page=%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute.ts&appDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _home_gascat_prismaquant_prisma_quantum_app_api_goods_in_purchaseId_delivery_note_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/goods-in/[purchaseId]/delivery-note/route.ts */ \"(rsc)/./app/api/goods-in/[purchaseId]/delivery-note/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/goods-in/[purchaseId]/delivery-note/route\",\n        pathname: \"/api/goods-in/[purchaseId]/delivery-note\",\n        filename: \"route\",\n        bundlePath: \"app/api/goods-in/[purchaseId]/delivery-note/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/home/gascat/prismaquant/prisma-quantum/app/api/goods-in/[purchaseId]/delivery-note/route.ts\",\n    nextConfigOutput,\n    userland: _home_gascat_prismaquant_prisma_quantum_app_api_goods_in_purchaseId_delivery_note_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/goods-in/[purchaseId]/delivery-note/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&page=%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute.ts&appDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&page=%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgoods-in%2F%5BpurchaseId%5D%2Fdelivery-note%2Froute.ts&appDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fgascat%2Fprismaquant%2Fprisma-quantum&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();